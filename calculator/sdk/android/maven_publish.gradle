
logger.lifecycle("""
    maven_publish var:
    REPOSITORY = 'local'
    ARTIFACT_GROUP = ${ARTIFACT_GROUP}
    ARTIFACT_NAME = ${ARTIFACT_NAME}
    ARTIFACT_VERSION = ${ARTIFACT_VERSION}
    BUILD_TYPE = ${BUILD_TYPE}
""")

apply plugin: 'maven-publish'

publishing {
    // 配置maven 仓库
    repositories { RepositoryHandler handler->
        handler.mavenLocal()  // 发布到默认的 本地maven 仓库 ，路径： USER_HOME/.m2/repository/
    }

    publications {
        maven(MavenPublication) {
            artifact "${project.buildDir}/outputs/aar/${project.name}-${BUILD_TYPE.toLowerCase()}.aar"
            groupId ARTIFACT_GROUP
            artifactId ARTIFACT_NAME
            version ARTIFACT_VERSION
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')
                configurations.implementation.allDependencies.forEach {
                    if (it.group != null && it.version != null) {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode("groupId", it.group)
                        dependencyNode.appendNode("artifactId", it.name)
                        dependencyNode.appendNode("version", it.version)
                    }
                }
                configurations.runtimeOnly.dependencies.forEach {
                    if (it.group != null && it.version != null) {
                        def dependencyNode = dependenciesNode.appendNode("dependency")
                        dependencyNode.appendNode("groupId", it.group)
                        dependencyNode.appendNode("artifactId", it.name)
                        dependencyNode.appendNode("version", it.version)
                    }
                }
            }
            // repositories {
            //     maven {
            //         //发布到远程Maven仓的地址以及Maven仓的帐号和密码
            //          url = getRepositoryUrl()
            //          credentials {
            //             username USER_NAME
            //             password PASSWORD
            //          }
            //     }
            // }
        }
    }
}
